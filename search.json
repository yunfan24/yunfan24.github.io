[{"title":"SpringBoot中使用自定义注解和拦截器实现简单的权限控制","path":"/posts/f512793/","content":"前言众所周知，作为系统的最后一道防线，对于一些重要操作（crud等），后端默认接收的所有的请求都是“不可信”的，除了确认用户登录状态之外，还要对接收的数据进行一系列的合法性校验等等，即使已经在前端页面对用户输入信息做了一定的限制。因为请求可以伪造，也可能被拦截篡改，即使在正常情况下，用户也可能因为误操作或者恶意行为发送不合法的请求。 如果多角色系统的接口不做权限校验的话，那无疑是在“裸奔”，任何一个普通的登录用户都能调用所有的接口。 Q:什么是权限控制？ A:让特定的用户只能访问特定的资源。 在实际项目中，如果权限控制需要复杂的逻辑或者需要非常细致的权限划分，可能需要借助专门的权限框架，主流的权限框架有 Spring Security https://spring.io/projects/spring-security Spring Security 是一个功能强大、高度可定制的身份验证和访问控制框架。它是确保基于 Spring 的应用程序安全的事实标准。Spring Security 是一个专注于为 Java 应用程序提供身份验证和授权的框架。与所有 Spring 项目一样，Spring Security 的真正威力在于它可以轻松扩展以满足自定义需求 Apache Shiro https://shiro.apache.org/ Apache Shiro™ 是一个功能强大且易于使用的 Java 安全框架，可执行身份验证、授权、加密和会话管理。利用 Shiro 易于理解的 API，您可以快速、轻松地保护任何应用程序的安全–从最小的移动应用程序到最大的网络和企业应用程序。 虽然上述的框架功能十分完备，但是对于只有两三个角色的系统来说，杀鸡焉用宰牛刀啊，通过使用SpringBoot框架提供的自定义注解和拦截器功能，可以轻松地实现对不同用户角色的访问权限控制。 本文用例说明： 系统有三种角色，管理员、教师、学生。 在数据库用户表中，用户类型字段以tinyint存储，3代表管理员，2代表教师，1代表学生。 功能需求：有些接口只能管理员访问，有些接口可以让管理员和老师访问，有些接口只能学生访问。 定义权限常量在项目下新建constant包，并新建接口用于定义角色权限常量 123456public interface UserConstant &#123; int USER_TYPE_ADMIN = 3; // 管理员 int USER_TYPE_TEACHER = 2; // 教师 int USER_TYPE_STUDENT = 1; // 学生 int USER_TYPE_LOGIN = 0; // 登录未认证身份用户&#125; 定义Access注解新建annotation包，在包下新建一个Access注解，用于权限控制 1234567import java.lang.annotation.*;@Retention(RetentionPolicy.RUNTIME)@Target(ElementType.METHOD)public @interface Access &#123; int[] roles() default &#123;&#125;;&#125; 新建权限拦截器123456789101112131415161718192021222324252627282930/** * 权限拦截器 */@Componentpublic class AccessInterceptor extends HandlerInterceptorAdapter &#123; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) &#123; if (!(handler instanceof HandlerMethod)) &#123; return true; &#125; HandlerMethod handlerMethod = (HandlerMethod) handler; Method method = handlerMethod.getMethod(); Access access = method.getAnnotation(Access.class); //如果role是空的，说明不需要权限，直接放行 if (access.roles().length == 0) &#123; log.info(&quot;access &quot; + method.getName() + &quot;role是空的&quot;); return true; &#125; //如果是指定角色（们）才能访问的权限 //获取登录用户信息的方法 User user = ......&lt;补全&gt;.......; //如果用户类型在权限数组中，说明权限足够 if (Arrays.asList(access.roles()).contains(user.getType())) &#123; return true; &#125; else &#123; response.setStatus(403); return false; &#125; &#125;&#125; 注册拦截器将权限拦截器添加到登录拦截器后面，拦截器将会在请求处理过程中按照它们被添加的顺序依次执行。 12345678910111213@Configurationpublic class RequestInterceptor implements WebMvcConfigurer &#123; @Resource private AccessInterceptor accessInterceptor; @Override public void addInterceptors(InterceptorRegistry registry) &#123; // 登录拦截器 // registry.addInterceptor(loginInterceptor); registry.addInterceptor(accessInterceptor); &#125;&#125; 在controller方法上加注解在需要进行权限校验的接口方法上使用@Access，在注解数组中填入之前定义的常量即可，例如下面的例子表示只有学生用户和管理员用户才可以访问接口。如果没有标记权限注解，或者注解中数组为空，则不会验证该接口请求的权限。 123456@GetMapping(&quot;/hello&quot;)@Access(roles = &#123;UserConstant.USER_TYPE_STUDENT,UserConstant.USER_TYPE_ADMIN&#125;)public BaseResponse&lt;List&lt;Activity&gt;&gt; hello()&#123; //统一返回结果类，返回统一格式的响应 return ResultUtil.success(activityService.list());&#125; 以上实现了一种在注解中枚举角色的权限控制方法，可以实现简单而灵活的权限控制，保护我们的应用程序免受未经授权的访问。这样使用数组定义注解，好处是自定义程度高，可以指定哪（几）个角色，从而更加精细的控制访问权限，缺点是用户角色较多时，注解添加会比较麻烦。 如果权限划分是分层级的话（例如：超级无敌管理员&gt;超级管理员&gt;普通管理员，高权限用户可以向下访问低权限用户的所有接口，低权限用户不能向上访问），可以将注解里的roles改成整形，并修改权限拦截器，将判定条件修改成比较权限值的大小，只要用户的权限的数值高于接口权限就放行。","tags":["注解","权限控制","拦截器"],"categories":["springboot"]},{"title":"写给软件234，也给两年前的自己","path":"/posts/20a80768/","content":"前言首先对大家在上次班会长达1小时的坚持表示感谢，因时间有限，准备仓促，部分内容可能没有准确完整的传达给大家，因此以这样的形式复盘一遍。 下面内容根据大家近期反馈的内容并结合我的自身经历，可能有部分我经常说，但是不同时期的你看，可能会有不同的理解。 在你看这篇文章之前，我会默认你是一个有上进心的人。因为你既然能点进来，那么你就是可以的。 注意，本篇内容均为我自己的理解和经验，我只会述说我切身的体会和认识，我写的不是指南，不是计划表，也不一定完全是对的，我写的只是一些话，一些可能帮助你的话 关于上学期班级整体情况一句话，咱们最乖且挂科最少，整体最棒，但平均成绩还有提升空间。 关于自己的生涯规划很多大学生的四年可能是这么过的 大一：好不容易上大学了，好好休息休息吧，开摆开摆 大二：开始有点迷茫焦虑，不知道自己是该参加比赛还是卷绩点还是准备找工作，一边迷茫一边摆，通常情况是晚上下定决心明天一定要发奋图强，第二天醒来一切照旧 大三：周围的人怎么都开始忙起来了，要不我现在开始准备找工作&#x2F;读研吧，但是还没意识到危机感 大四：棒子打在身上觉得痛了，开始考研&#x2F;找工作 这是不是一份好的规划呢？我想大家心里有答案，没有人不想要更好的未来。 从后往前看，这四年里 大四下，准备毕业设计毕业论文；大四上，专业实训或者外出实习，选择考研的话同时要备考； 大三可以视为一个关键节点，因为要确定自己的方向，在一边学习课程的同时，准备迎接相应的考核。 那大一大二该做什么就很容易看出了，为大三的选择打下基础，为日后的厚积薄发做准备。具体而言，无非就是，想保研使劲卷绩点、考各种证书、寻找各种加分项，想考公或者走选调生就多在学生组织积累经验，想考研就打好英语数学专业课基础，想直接找工作就在技术方面多倾斜、积累实习经验······这些平时也经常跟你们说，这里就不再费口舌。 不要以迷茫为借口而无所事事，你有大把的事情可以去做。 最后，现阶段（大一）并不着急确定详细的规划，当然，越早的确定清晰的方向，就能越早的在对应方向积累。但也会因为前期的认知不足导致错误的选择。总之，至少需要知道，哪些是重要的哪些是不重要的，哪些对你有用，哪些你并不需要。例如，不管是打算考研还是毕业直接找工作，只要想在本专业发展的话，打好专业课基础就是必要的；有保研打算的话，绩点是重要的；想找工作的话，积累实习经验是重要的。个人建议，在还不明确要做什么的时候，也就是大一这一年，成绩尽可能的高、计算机相关的技术也尽量多的学、学生工作也积累着经验、竞赛也尽量参加，不要一开始就把路走窄了。 关于如何学习专业知识计算机专业的知识可能多且复杂，技术的更新迭代快，短时间内了解全面是很困难的，那如何开始第一步呢？ 在多数人看来，课堂上讲的知识可能枯燥无味不实用，跟你想象的开发手机app，做游戏相差甚远，如此一来，逐渐丧失了对计算机专业的兴趣。 既然这样，不如先不看底层，以自顶向下的方式去学习。先做出个小玩意，譬如一个属于自己的网站，就像你正在看我的网站一样，Github上面有不少项目对新手十分友好，有些甚至只需要一行命令就能傻瓜式部署，你只需要复制粘贴回车，看着黑窗口里的代码滚动完就能体会到满满的成就感。在此过程中，可能会发现自己的盲区，这时就会有相对更加充足的动力去学习相关方面内容，因为你的目的不是学完一整本书，而是解决一个小问题。 例如，如果你还不了解内网外网的概念，你会疑问为什么网站在你的电脑能访问，而别人看不到。 （非广告）阿里云高校学生权益，可领取300元代金券换取服务器 经过一通搜索，你拥有了一台自己的服务器，可是又发现了问题，别的网站地址都是 baidu.com这样，你的是一串类似192.168.1.11这样的数字，再去搜索引擎转一转，你会认识到域名、以及DNS解析的概念。慢慢的还会接触到HTTP、TCP、IP，再往后会遇到操作系统、编译原理等基础知识，这些随便拎出来一个足够让你昏昏欲睡的名词，在此刻慢慢的有了概念。直到某天你甚至可以推测出某些东西的存在，并且它具有什么样作用。例如，通过了解超文本传输协议（HTTP，HyperText Transfer Protocol），互联网上应用最为广泛的一种网络协议，你知道HTTP 协议是以明文方式发送信息的，不免思考，http报文以明文的方式在网络上传输，那传输的内容被中间人截获了怎么办？ 想象一下，你向喜欢的人发送“我喜欢你，做我女朋友吧” 对方收到后，回复“好呀，我答应了” 不巧，一名黑客截获了回复，并更改成“你是个好人，我已经有喜欢的人了”并发送给你 从此，世界上少了一对真爱······ 那如何保证客户端跟服务器之间的通信安全呢？ 简单，加密就完了，约定一个密码，双方发送信息都加密后再发送，收到信息之后用约定的密码解密。 比如跟他&#x2F;她约定好，“今天天气真不错！”代表“一会去一块去图书馆学习等着我！”，这样每次要出去学习时，发送“今天天气真好”，别人就看不懂你们在说什么。 跟你的crush当然可以这么做。 那你的客户端跟服务器怎么约定密码，密码本身不也得通过网络传输吗，除非你千里迢迢到服务器旁边把密码告诉他，回来你俩再进行通信。 听起来不太现实，那https是怎么解决传输的安全问题呢？ 上述的加密方法其实是对称加密，即这把钥匙既能开锁又能解锁，有一种加密方式是非对称加密，密钥是成对的，公钥加密的内容只能由私钥解密。 “！那我知道了，https是用非对称加密实现的！” 不完全对，其实是用两种方式混合实现的。 欲知后事如何请看终于有人把 HTTPS 原理讲清楚了！ 就这样一边玩一边学，等到后来系统学习计算机网络这本书时，你将会发现书里到处都有你认识的影子。 慢慢的，当对计算机整个体系有了整体的印象之后，你就能意识到自己需要系统学习哪些方面的知识。 当然，无论最后采取什么样的方式，答案只有三个字，先去学。 Q:我不知道该怎么下手该怎么办？ A:除了搜索引擎，还有一种更为简单的方式——人工智能，你可以问他任何问题，他不会嘲笑你的问题有多么简单、幼稚，虽然机器的回答有时比较呆，但对于开拓未知的领域还是很有帮助的。下面是百度文心一言的回答示例，你可以继续追问不理解的内容 大学以后，从书上能学来的东西越来越少，尤其是计算机专业，大量最新资源依托于互联网，书的出版速度可能赶不上技术的迭代。搜索引擎，社区论坛，开源源码，官方文档或者询问人工智能，这才是你要学习的东西。 培养独立解决问题的能力学习过程中不免会遇到各种各样的问题，反过来想，如果人人都能实现，那你的价值何在，解决问题的能力本身也是考核的一部分。 Debug，被誉为贯穿程序员一生的必备开发技能。有些同学非常害怕编译运行时大片的Error，其实这些正是最容易解决的错误，因为编译器已经告诉你哪里错了；业务逻辑、功能上的bug才是最难排查的，这时就需要调试程序一步步排查问题所在。每个同学都应该掌握自己调试程序的能力，而不是简单尝试后，拍照，将问题转发给别人。 IDEA中的debug断点调试技巧 其他问题，例如，为Java配置环境变量，这类问题就更简单了，题目即答案，搜索关键词Java配置环境变量，这么多教程，总有一个你能复现。 很多事情别人帮助了你，要说谢谢，因为没有人有义务帮助你。 在学校，有热心的老师学长学姐同学会给你解答问题，这终究是依赖自身之外的力量，具有一定的不可靠性。况且，自己解决问题，能够节省大量的沟通时间，提高效率，避免问题解决但是自己的热度已经褪去。 但这并不是说问别人问题是有罪的，我只是说类似配置环境变量这样的问题，并不是需要大动干戈的难事，如果这个都穷尽了你所有的方法，你可能很难追赶别人的步伐。换句话说，询问问题应该获取到如何渔而不仅仅是一时的鱼。 持之以恒编程，需要有耐心，如果你想很快的有一个非常炫酷的软件，那么，我只能说你有点好高骛远了。 不必去羡慕别人的软件多么酷炫，画面多么好看，我们要看的是我们的进步，我们的基础，基础最重要，有一个好的基础，你可以不懂什么流行名词，可以不懂什么高级的算法技术，因为一个好的基础，可以让你很快，非常快的学习这些东西，这些东西无非就是我们所学习的基础搭建出来的。 所以，认真地踏实地去学习，不用太着急，只要有进步就行。 千万不要像背单词一样，今天特别激动，从头开始背了几十个，之后遇到瓶颈搁置了几天，一段时间后又心血来潮，继续从abandon开始背。 另外，万事开头难，允许自己先做出一个垃圾，之后再慢慢打磨优化，完美主义固然没错，但有时会产生过多的压力阻挡你迈出第一步。 如何打破信息茧房你能意识到信息差的存在，就已经打破一半了。 上述的各种工具、方法，为什么有些你都没听过，反思一下自己是不是一直处于被动接收的状态，从未主动寻找，每天刷的短视频、各种信息流即是获取信息的主要来源，同样是刷视频，每个人刷到的也是不一样的，平台有严谨的算法推算你喜欢什么样的内容，久而久之，形成了信息闭塞。看一下你的搜索记录，是“某某女教师xxx大瓜”还是“java学习路线”？ 话说回来，只是被动的接收我给你们传递的信息，也是一种信息茧房，本文既能打破你得信息茧房，亦能成为你得信息茧房。我的一些言行大概率会一定程度上影响你们的走向，所以，认识更多的学长学姐，了解更多不同的看法，多跟指导老师交流，拓宽自己的眼界。从大学的第一天开始，你就必须从被动转向主动，你必须成为自己未来的主人，你必须积极地管理自己的学业和将来的事业，理由很简单：因为没有人比你更在乎你自己的工作与生活。“让大学生活对自己有价值”是你的责任。 从被动接收信息转变为主动搜集信息，信息茧房不攻自破。 提前了解行业形势此部分内容可能比较适合对软件感兴趣想在本专业就业的同学。 最然才大一，可以适当了解一下行业形势，下载一个招聘App，看一下自己心仪岗位的要求，思考一下以后想在哪个城市发展等等。 准备一部分简历，好的简历不是一次写出来的，而是慢慢优化，随着自己经历的增加，会有越来越多的荣誉、经历可以写在上面。反之，若是你的简历一篇空白，没有什么可以写，那就明白应该做点什么事情了。 双非的我们如何能进大厂？ 相信学计算机的大家，一定早就对百度、字节跳动、阿里巴巴、腾讯这之类的大厂有所耳闻，其实，咱们中的人进入大厂，也并不是一个不切实际的梦想。但是对于咱们来说，想进大厂需要有过硬的实力，才能弥补学历的差距。大厂重视考察基础、算法，可从以下方面着手准备： 算法：尽早养成刷题的习惯。（LeetCode）可以顺道参加个蓝桥杯等比赛。 实习：充分利用假期时间，积累多段实习经验，快一点的话大二暑假就可以去实习。 计算机基础：计算机网络，数据结构，计算机组成原理，操作系统。 项目：有两个自己拿的出手的项目写在简历上，而不是常见的增删改查类。 开源项目贡献：成为一个Star数相当多的开源项目活跃贡献者还是很加分的。 竞赛：反正是要学习的知识，顺道拿个奖，也不用花过多时间准备。 个人博客：你的文章是你最好的自我介绍。 上述这些并不是到了要找工作才开始准备，现在这个时间点，就必须着手开始了。 这里，我并没有准确全面的信息告诉大家，因为我也没在大厂待过，我只能在你们那里种下一颗种子，剩下的靠你们自己去探索。我就等着有朝一日，你们中有人进了大厂把我内推过去（狗头）。 挖坑一鼓作气，再而衰，三而竭。今天是第三天，写不下去了，目前先这样吧，大家可以按下ctrl+D收藏一下,时不时回来看看，后期可能还会补充新的内容。 过一段时间之后再来看，可能会有不同的收获。 写在最后稍微了解一点搜索技巧，能用谷歌就用谷歌（可以找到镜像网站），其次是Bing加ADGUARD插件，尽量避免使用百度，用对方法往往能缩短数倍的时间。 如何高效检索信息：搜索引擎使用小技巧 经常看看github，掘金这类技术社区，没准有你感兴趣的。 保持谦虚。 计划可能赶不上变化，比如这篇文章为什么这个点发给你（狗头）。 不要太老实，一直跟着老师教的走完很有可能毕业即失业。 自己主动寻找一下哪些比赛可以参加，并不是所有的比赛都有人通知组织建群。（赛氪APP） 图书馆对面的外文楼有个小食堂，在图书馆一直待着学习的话，可以去那吃饭，能节省大量时间。 不要让自己太闲了，哪怕是出去玩一圈，也比在宿舍躺一整天好，抓住有限的时间，让自己的学习、生活更加精彩。 保持天真，在小孩眼里，我们是大人；在大人眼里，我们是小孩；带着稚气，带着困惑，带着自信，带着理想上路吧！ 好记性不如烂笔头，灵感往往都是瞬间浮现，不妨记一下。 好好利用在公共场合说话的机会，展示或者锻炼。别怕丢人，那是一种成功的尝试，不要笑话那些上台丢人的人。 并不是每个人都像你一样热爱学习，并不是每个人都像你一样心底里拥有不甘心的勇气。当感觉周围环境阻碍你的进步时，踏出舒适的小环境，去和更加优秀的人接触。 找到自己的兴趣，最轻松的事情就是做自己喜欢的事情，并不是听音乐、画画之类的才是爱好，刷题也有可能上瘾，计算机专业毕业之后不只有写代码做程序员一条路。前端、后端、测试、运维、网络空间安全（最接近黑客）都可以选择，前期可以广泛涉猎寻找自己感兴趣的方向。实在不行，大一把成绩搞好，还可以转专业呢。 写在最最后 我的大学即将迎来日落，而你、你们的太阳才刚刚升起。 祝你，前程似锦，一帆风顺。 ——软件234学生导员 附录一些关键词，可能能够拓宽你的视野：软著、软考、暑期实习、日常实习、markdown、Github、选调生、leetcode、洛谷、ACwing、数学建模、爬虫、教师资格证、抓包、代码随想录、动态规划、贪心算法、 一些可能对你有用的资源 erdengk 請你喝杯Java 爱吃芝士的土豆倪 guangju_dev 01星球 尚硅谷2022年Java学习路线 小林coding 框框大学 未读代码、 Hello算法 leetcode 牛客 脉脉 代码随想录 zlibrary 致谢： 本文部分内容参考自以下文章 计算机知识的学习应该是自顶向下还是自底向上？ 送给大一新生的一些话 写给新大一计算机类新生的建议 写给即将步入大一的计算机新生的一些经验之谈 写给计算机专业大一自己的一封信 给大一新生的25条建议 计算机专业大学四年应该怎么过？早点看到这篇文章就好了 上次编辑于2024.3.17 00:51 本次编辑于2024.4.11 19:00","tags":["代码人生"],"categories":["总结"]},{"title":"在Linux上创建新用户并配置SSH免密连接","path":"/posts/d4439880/","content":"为什么要创建新用户？ 权限控制：每个用户可以被赋予特定的权限，以限制其对系统资源的访问。创建新用户可以根据需要为其分配适当的权限，从而提高系统安全性，即使账户被窃取，也能将损失控制在限定的范围内。 隔离环境：通过创建新用户，可以隔离不同用户之间的环境，避免彼此之间的干扰和冲突。 跟踪活动：每个用户的活动都可以被追踪和记录，有助于监控系统的安全性和运行情况。 创建新用户的方法1. 使用命令行创建新用户在Linux系统中，可以使用useradd命令来创建新用户。 adduser也可以创建新用户，二者区别可以参考useradd 与adduser的区别 例如，本文以用户newuser为例，使用如下命令创建一个名为newuser的用户， 1sudo useradd newuser 系统将提示您输入新用户的密码和其他信息。按照提示输入即可完成新用户的创建。 2. 设置用户密码使用passwd命令来为新用户设置密码： 1sudo passwd newuser 3. 授予新用户sudo权限（可选）如果需要给新用户添加sudo权限，这里以Ubuntu 22.04LTS为例，可以使用下面其中一个方法： （推荐）可直接将新用户添加到sudo用户组使用以下命令将新创建的用户添加到sudo 组： 1sudo adduser newuser sudo 要撤销用户的 sudo 权限（例如 newuser），可以执行： 1sudo deluser newuser sudo （较为麻烦）修改sudoers文件打开 /etc 目录下的 sudoers 文件，在 root ALL=(ALL) ALL 语句下添加 newuser ALL=(ALL) ALL 。 可以使用sftp工具直接更改后上传，也可以使用vim，下面是vim的操作方法： 12# 执行sudo vim /etc/sudoers 按i在当前光标处进入编辑模式 使用方向键移动光标，在root ALL&#x3D;(ALL) ALL语句下添加一行 1newuser ALL=(ALL) ALL 按一下esc，即退出编辑模式； 输入英文状态下的冒号:； 之后输入wq后回车，即保存并退出； 如果遇到提示E45:readonly&#39;option is set (add to override)无法保存修改，输入:wq!即可。 如果修改错误需要丢弃修改，esc输入冒号后，输入q!回车，即不保存退出。 vim使用方法菜鸟教程Linux vi&#x2F;vim 要验证用户是否已添加到 sudo 组中，请运行： 123sudo -l -U &lt;username&gt;# 例如# sudo -l -U newuser 输出以下内容代表有sudo权限 123456匹配 %2$s 上 %1$s 的默认条目： env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty用户 newuser 可以在 xiaoxin-virtual-machine 上运行以下命令： (ALL : ALL) ALL 4.客户端生成SSH密钥对SSH密钥对由公钥和私钥组成，私钥保存在客户端，而公钥保存在服务器端。 相较于用户名和密码认证方式，使用SSH密钥对认证方式具有以下优势： 安全性：使用SSH密钥对登录认证更为安全可靠。 SSH密钥对安全强度远高于常规用户口令，可以杜绝暴力破解威胁。 无法通过公钥推导出私钥。 便捷性： 如果您将公钥配置在Linux实例中，那么，在本地或者另外一台实例中，您可以无需输入密码，直接使用私钥通过SSH命令或相关工具登录。 支持远程登录大量Linux实例。如果您需要批量维护多台Linux实例，可以使用这种方式登录。 打开cmd，使用ssh-keygen命令在客户端生成SSH密钥对： 1ssh-keygen -t rsa -C &quot;填入邮箱&quot; 按照提示，选择保存密钥的位置和设置密钥的密码。 打开保存密钥对的文件夹，用记事本打开.pub结尾的文件，ctrl+A全选，ctrl+C复制内容。 5. 将公钥复制到服务器打开 /home/newuser/.ssh 目录下的authorized_keys 文件，如果不存在就新建对应目录和文件，将之前生成的公钥文件中的所有内容复制进去，保存。 vim命令 1sudo vim /home/newuser/.ssh/authorized_keys 按i进入编辑模式，粘贴刚才复制的公钥内容ECS :wq保存退出，或:wq! 6.修改服务器新用户目录权限以及所有权 为公钥文件和文件夹设置权限。 12chmod 600 /home/newuser/.ssh/authorized_keyschmod 700 /home/newuser/.ssh chmod命令可设置文件或文件夹的权限，三位数字为linux中的权限代码，介绍及教程：菜鸟教程 Linux chmod命令。 将/home/newuser文件夹及其子文件夹、子文件所有权移交给git用户。 ! 漏掉此步骤可能会导致登录新用户时提示/home下该用户目录不存在或者用户不存在导致无法登录 1chown -R newuser:newuser /home/newuser chown命令可以变更目录或文件的所有者，-R参数是对子目录及其内的所有文件生效。 尝试进行SSH免密连接完成以上步骤后，就可以使用SSH免密连接登录到服务器了。在客户端命令行中使用以下命令登录到服务器，将your_server_ip替换成你的服务器IP地址： 1ssh newuser@your_server_ip 系统将使用您生成的密钥对进行身份验证，若配置成功，无需输入密码即可登录到服务器。 删除用户在上述步骤中，可以从“sudo”组中删除用户以取消其sudo权限。但是用户仍然存在于系统中。要从 Linux 系统中完全删除用户，请以 root 或 sudo 用户身份登录并运行： 1sudo deluser &lt;username&gt; 如果要删除用户及其主目录，请运行： 1sudo deluser -r &lt;username&gt; 若出现userdel: user xxxxx is currently used by process 10997 杀掉该进程即可 1pkill 10997","tags":["Linux","SSH","sudo","vim","秘钥对"],"categories":["Linux"]},{"title":"如何高效检索信息：搜索引擎使用小技巧","path":"/posts/ff1f1596/","content":"前言在当今信息爆炸的时代，搜索引擎已经成为我们获取信息的主要途径之一。 平时我们使用搜索引擎，通常是将关键字输入搜索框后回车，然后开始从上到下翻阅有用的信息。其实搜索引擎提供了多种语法，合理使用这些语法，能够帮助我们更加快速的找到有效信息。 本文将介绍一些常用的搜索语法，以帮助您更有效地获取信息。 1. + 或 AND“与”，搜索包含多个关键词的结果 示例： 1健康 +饮食 返回同时包含“健康”和“饮食”的结果。 2. OR 或 |或者 示例： 1游戏 OR 电影 返回包含“游戏”或“电影”的结果。 3. -用于排除包含特定的关键词的结果。 示例： 1水果 -苹果 返回包含“水果”但不包含“苹果”的结果。 4. “”用于精确匹配引号内的短语，即搜索结果中必须包含引号内的词。 示例： 1“人工智能发展史” 返回包含完整短语“人工智能发展史”的结果。 5. *占位符，可以表示一连串字符。 示例： 1平凡* 名著 直接搜索平凡 名著,搜索结果可能包含《平凡》这本书，而搜索平凡* 名著前几个结果均为《平凡的世界》 6. filetype用于搜索特定类型的文件，搜索结果均为指定格式的文件。 示例： 1xxx报告 filetype:pdf 返回xxx报告的PDF格式结果。 7. site用于限制搜索结果来自特定网站。 示例： 1site:wikipedia.org 太阳系 返回来自维基百科的关于“太阳系”的结果。 8. info获取关于特定网站的信息。 示例： 1info:github.com 返回有关github网站的信息。 9. related查找与指定网站类似的网站。 示例： 1related:github.com 返回类似于github的其他网站。 10. inurl用于在URL中查找包含某个特定关键词的结果。 示例： 1inurl:weather 北京 返回URL中包含“weather”并且和“北京”相关的结果。 11. intitle搜索标题中包含某个特定关键词的页面。 示例： 1intitle:冬奥会 返回标题中包含“冬奥会”的页面。 12. intext搜索页面正文中包含某个特定关键词的页面。 示例： 1intext:全球变暖 这将返回正文中包含“全球变暖”的页面。 13. allinurl查找URL中包含所有指定关键词的页面。 示例： 1allinurl:美食 推荐 返回URL中包含“美食”和“推荐”的页面。 14. allintitle查找标题中包含所有指定关键词的页面。 示例： 1allintitle:科技 创新 返回标题中包含“科技”和“创新”的页面。 15. allintext查找正文中包含所有指定关键词的页面。 示例： 1allintext:健康 饮食 返回正文中包含“健康”和“饮食”的页面。 注： 1.冒号需要使用英文状态的,且冒号后面没有空格； 2.指令前面需要用空格与关键字隔开，如平凡的世界 filetype:pdf，filetype前面有空格； 这么多用法记不住怎么办不用担心，搜索引擎对应有高级搜索界面，例如谷歌高级搜索（https://www.google.com/advanced_search），在对应输入框中输入关键词即可 附：百度高级搜索（https://www.baidu.com/gaoji/advanced.html）","tags":["搜索语法","搜索引擎"],"categories":["笔记"]},{"title":"远程连接终端——WindTerm安装使用教程","path":"/posts/f682a309/","content":"前言最近在使用xshell时，偶尔需要传输一下文件。然而，由于Xshell和Xftp是分开的，这就有些不太方便。于是找到了这个集SSH和SFTP一体的工具——WindTerm。开源免费，跨平台，支持 Windows、Linux 和 macOS，启动速度快。除此之外还有命令提示补全功能（根据历史命令）。 官方介绍 A Quicker and better SSH&#x2F;Telnet&#x2F;Serial&#x2F;Shell&#x2F;Sftp client for DevOps. WindTerm是一个更快、更好的SSH&#x2F;Telnet&#x2F;Serial&#x2F;Shell&#x2F;SFTP客户端，专为DevOps而设计。预览图 下载安装开源项目，官方下载地址，截止文章编辑时，Star数19.5k。 以win11为例，下载x86_64版本，解压缩后点击WindTerm.exe即可使用 使用配置锁屏密码WindTerm有30分钟锁定机制，闲置30分钟之后需要输入密码解锁，安装好后要首先设置一个密码，点击主界面右下角锁屏-更改主密码，旧密码留空，输入新密码、确认密码后点击更改即可。 也可以设置关闭自动锁屏，会话-首选项-设置-安全-锁屏-锁屏超时输入0 回车即可。 如果感觉每次输入密码太麻烦，可以到软件安装目录WindTerm_2.x.x\\ .wind\\profiles\\default.v10中找到user.config文件，修改application.masterPassword 为false，重新启动，之后遇到密码界面，回车即可 新建会话点击会话-新建会话，以ssh为例 填写主机ip 选择端口 设置分组 这里与Xshell不同，连接的用户名并不在会话中填写，而是与Onekey绑定，故这里只需填写主机和端口。 OneKey，类似xshell中的用户密钥管理，或者浏览器的密码管理器，用于集中存放用户的认证凭据。首次设置，点击输入框中的设置图标，点击左下角设置OneKey管理器密码，设置好之后，点击左下角加号即可添加，之后选择对应onekey连接即可。 界面设置日常使用时，可能有很多功能用不到，实际最多使用的也就SSH是和文件管理，可以根据使用习惯把不需要的都关掉，节省屏幕空间。 右上角专注模式旁边的按钮，点击即可设置界面，可以按照自己喜好保留、关闭菜单，按照上面图中设置，效果如下 自动复制会话-首选项-设置-文本-自动复制选定内容 即可开启自动复制，开启后在命令行中选中文本即可自动复制到剪切板。 会话空闲保活长时间无操作闲置会话，可能会导致主机断开连接，造成命令行界面卡住，可以开启会话保活，在会话-首选项-默认会话设置-SSH-连接-发送空包以保持会话活动，设置15，即15秒自动发空包保持会话存活。 其他内容在连接新装系统的主机时，如果遇到无法连接的情况，检查ssh服务是否安装并启动，可以使用systemctl status ssh 查看ssh状态，效果如下 若无ssh服务，ubuntu系统下，执行sudo apt install openssh-server 安装ssh服务后即可连接。 如果ssh服务没有问题，请检查防火墙是不是没有放行相应端口，新建会话时填写的ip地址是否正确。 使用过程中，若遇到软件方面的其他问题，可在官方仓库Issues尝试寻找解决方案。","tags":["工具","安装教程"],"categories":["开发工具"]},{"path":"/baidu_verify_codeva-80f9HbalXR.html","content":"2acfce1351636a7196d756fede614ea8"},{"title":"about","path":"/about/index.html","content":"还没有东西哦~"}]